{
	"info": {
		"_postman_id": "pixelforge-api-collection",
		"name": "PixelForge Backend API",
		"description": "Complete API collection for PixelForge Studio's backend system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@pixelforgestudio.in\",\n  \"password\": \"userpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					}
				},
				{
					"name": "Register Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@pfs.in\",\n  \"password\": \"adminpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register admin user (manually promote to admin role in database)"
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"user_token\", jsonData.data.access_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@pixelforgestudio.in\",\n  \"password\": \"userpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login user and get JWT token"
					}
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"admin_token\", jsonData.data.access_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@pfs.in\",\n  \"password\": \"adminpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login admin user and get JWT token"
					}
				},
				{
					"name": "Get Access Token (OAuth2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"oauth_token\", jsonData.access_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "admin@pfs.in",
									"type": "text"
								},
								{
									"key": "password",
									"value": "adminpassword123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/auth/token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"token"
							]
						},
						"description": "OAuth2 compatible token endpoint"
					}
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Get current logged-in user details"
					}
				},
				{
					"name": "List All Users (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/?skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List all users (Admin only)"
					}
				},
				{
					"name": "Get User by ID (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						},
						"description": "Get user details by ID (Admin only)"
					}
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Create Category (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Photo Frames\",\n  \"description\": \"Custom photo frames for memorable moments\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/categories/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								""
							]
						},
						"description": "Create a new category (Admin only)"
					}
				},
				{
					"name": "List All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories/?skip=0&limit=10&active_only=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								""
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "active_only",
									"value": "false"
								}
							]
						},
						"description": "List all categories with optional filtering"
					}
				},
				{
					"name": "List Active Categories Only",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories/?active_only=true&skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								""
							],
							"query": [
								{
									"key": "active_only",
									"value": "true"
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List only active categories"
					}
				},
				{
					"name": "List Active Categories (Dedicated Endpoint)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories/active?skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"active"
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List only active categories (public endpoint)"
					}
				},
				{
					"name": "Get Category by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/categories/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"1"
							]
						},
						"description": "Get category details by ID"
					}
				},
				{
					"name": "Update Category (Admin)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Photo Frames\",\n  \"description\": \"Updated description for photo frames\",\n  \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/categories/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"1"
							]
						},
						"description": "Update category (Admin only)"
					}
				},
				{
					"name": "Soft Delete Category (Admin)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/categories/1?hard_delete=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"1"
							],
							"query": [
								{
									"key": "hard_delete",
									"value": "false"
								}
							]
						},
						"description": "Soft delete category (deactivate) - Admin only"
					}
				},
				{
					"name": "Hard Delete Category (Admin)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/categories/1?hard_delete=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categories",
								"1"
							],
							"query": [
								{
									"key": "hard_delete",
									"value": "true"
								}
							]
						},
						"description": "Permanently delete category - Admin only (use with caution)"
					}
				}
			],
			"description": "Category management endpoints"
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Create Product (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Beautiful Photo Magnet",
									"type": "text"
								},
								{
									"key": "price",
									"value": "25.99",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "4.5",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": [],
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Create a new product with optional image uploads"
					}
				},
				{
					"name": "Create Product with Description (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Custom Memory Canvas",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Transform your favorite memories into beautiful canvas prints. High-quality materials and vibrant colors ensure your photos look stunning for years to come.",
									"type": "text"
								},
								{
									"key": "short_description",
									"value": "Custom memory canvas prints",
									"type": "text"
								},
								{
									"key": "price",
									"value": "45.99",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "1",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "4.8",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Create product with full description and short description"
					}
				},
				{
					"name": "Create Fridge Magnet (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Custom Fridge Magnet",
									"type": "text"
								},
								{
									"key": "price",
									"value": "15.50",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "2",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "4.0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Create a fridge magnet product"
					}
				},
				{
					"name": "Create Retro Print (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Vintage Retro Print",
									"type": "text"
								},
								{
									"key": "price",
									"value": "35.00",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "3",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "5.0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Create a retro print product"
					}
				},
				{
					"name": "List All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/?skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List all products (public access)"
					}
				},
				{
					"name": "List Unlocked Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/unlocked?skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"unlocked"
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List only unlocked products (public access)"
					}
				},
				{
					"name": "List Unlocked Products by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/unlocked?category_id=1&skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"unlocked"
							],
							"query": [
								{
									"key": "category_id",
									"value": "1"
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List unlocked products filtered by category ID"
					}
				},
				{
					"name": "List Products by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/?category_id=1&skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							],
							"query": [
								{
									"key": "category_id",
									"value": "1"
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List products filtered by category ID"
					}
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Get product details by ID"
					}
				},
				{
					"name": "Update Product (Admin)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Updated Product Title",
									"type": "text"
								},
								{
									"key": "price",
									"value": "29.99",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "4.8",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Update product details (Admin only)"
					}
				},
				{
					"name": "Lock Product (Admin)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/products/1/lock",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1",
								"lock"
							]
						},
						"description": "Lock product to prevent modifications"
					}
				},
				{
					"name": "Unlock Product (Admin)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/products/1/unlock",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1",
								"unlock"
							]
						},
						"description": "Unlock product to allow modifications"
					}
				},
				{
					"name": "Delete Product (Admin)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Delete product (Admin only)"
					}
				}
			],
			"description": "Product management endpoints"
		},
		{
			"name": "Inquiry",
			"item": [
				{
					"name": "Submit Contact Inquiry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone_number\": \"+1234567890\",\n  \"subject\": \"Product Inquiry\",\n  \"message\": \"I am interested in your custom photo magnets. Could you please provide more information about pricing and customization options?\",\n  \"subscribe_newsletter\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/inquiry/contact",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"inquiry",
								"contact"
							]
						},
						"description": "Submit a customer inquiry/contact form"
					}
				},
				{
					"name": "Submit General Inquiry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"Jane\",\n  \"last_name\": \"Smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"subject\": \"Business Partnership\",\n  \"message\": \"Hello, I'm interested in exploring a potential business partnership with PixelForge Studio. Please contact me to discuss further.\",\n  \"subscribe_newsletter\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/inquiry/contact",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"inquiry",
								"contact"
							]
						},
						"description": "Submit a general inquiry without phone number"
					}
				},
				{
					"name": "Test Email Service",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/inquiry/contact/test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"inquiry",
								"contact",
								"test"
							]
						},
						"description": "Test endpoint to verify email service configuration"
					}
				}
			],
			"description": "Customer inquiry and contact form endpoints"
		},
		{
			"name": "System",
			"item": [
				{
					"name": "Welcome Message",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Get welcome message and API info"
					}
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check API health status"
					}
				}
			],
			"description": "System status and info endpoints"
		},
		{
			"name": "Error Cases",
			"item": [
				{
					"name": "Unauthorized Access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Try to access protected endpoint without token"
					}
				},
				{
					"name": "Invalid Category ID",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Invalid Product",
									"type": "text"
								},
								{
									"key": "price",
									"value": "10.00",
									"type": "text"
								},
								{
									"key": "category_id",
									"value": "999",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Try to create product with invalid category ID"
					}
				},
				{
					"name": "Update Locked Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Should Fail",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Try to update a locked product (should fail)"
					}
				}
			],
			"description": "Test error handling and validation"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}
