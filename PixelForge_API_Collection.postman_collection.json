{
	"info": {
		"_postman_id": "pixelforge-api-collection",
		"name": "PixelForge Backend API",
		"description": "Complete API collection for PixelForge Studio's backend system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@pixelforgestudio.in\",\n  \"password\": \"userpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					}
				},
				{
					"name": "Register Admin",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@pfs.in\",\n  \"password\": \"admin1234\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register admin user (manually promote to admin role in database)"
					}
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"user_token\", jsonData.data.access_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@pixelforgestudio.in\",\n  \"password\": \"userpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login user and get JWT token"
					}
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"admin_token\", jsonData.data.access_token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@pfs.in\",\n  \"password\": \"adminpassword123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login admin user and get JWT token"
					}
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{user_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Get current logged-in user details"
					}
				},
				{
					"name": "List All Users (Admin)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/?skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List all users (Admin only)"
					}
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Create Product (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Beautiful Photo Magnet",
									"type": "text"
								},
								{
									"key": "price",
									"value": "25.99",
									"type": "text"
								},
								{
									"key": "category",
									"value": "Photo Magnets",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "4.5",
									"type": "text"
								},
								{
									"key": "images",
									"type": "file",
									"src": [],
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Create a new product with optional image uploads"
					}
				},
				{
					"name": "Create Fridge Magnet (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Custom Fridge Magnet",
									"type": "text"
								},
								{
									"key": "price",
									"value": "15.50",
									"type": "text"
								},
								{
									"key": "category",
									"value": "Fridge Magnets",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "4.0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Create a fridge magnet product"
					}
				},
				{
					"name": "Create Retro Print (Admin)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Vintage Retro Print",
									"type": "text"
								},
								{
									"key": "price",
									"value": "35.00",
									"type": "text"
								},
								{
									"key": "category",
									"value": "Retro Prints",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "5.0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Create a retro print product"
					}
				},
				{
					"name": "List All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/?skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List all products (public access)"
					}
				},
				{
					"name": "List Unlocked Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/unlocked?skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"unlocked"
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List only unlocked products (public access)"
					}
				},
				{
					"name": "List Unlocked Products by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/unlocked?category=Photo Magnets&skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"unlocked"
							],
							"query": [
								{
									"key": "category",
									"value": "Photo Magnets"
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "List unlocked products filtered by category"
					}
				},
				{
					"name": "Get Products by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/category/Photo Magnets?skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"category",
								"Photo Magnets"
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get products by specific category"
					}
				},
				{
					"name": "Get Unlocked Products by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/category/Photo Magnets?unlocked_only=true&skip=0&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"category",
								"Photo Magnets"
							],
							"query": [
								{
									"key": "unlocked_only",
									"value": "true"
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get only unlocked products by specific category"
					}
				},
				{
					"name": "List Products by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/?category=Photo Magnets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							],
							"query": [
								{
									"key": "category",
									"value": "Photo Magnets"
								}
							]
						},
						"description": "List products filtered by category"
					}
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Get product details by ID"
					}
				},
				{
					"name": "Update Product (Admin)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Updated Product Title",
									"type": "text"
								},
								{
									"key": "price",
									"value": "29.99",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "4.8",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Update product details (Admin only)"
					}
				},
				{
					"name": "Lock Product (Admin)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/products/1/lock",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1",
								"lock"
							]
						},
						"description": "Lock product to prevent modifications"
					}
				},
				{
					"name": "Unlock Product (Admin)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/products/1/unlock",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1",
								"unlock"
							]
						},
						"description": "Unlock product to allow modifications"
					}
				},
				{
					"name": "Delete Product (Admin)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Delete product (Admin only)"
					}
				}
			],
			"description": "Product management endpoints"
		},
		{
			"name": "System",
			"item": [
				{
					"name": "Welcome Message",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Get welcome message and API info"
					}
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check API health status"
					}
				}
			],
			"description": "System status and info endpoints"
		},
		{
			"name": "Error Cases",
			"item": [
				{
					"name": "Unauthorized Access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Try to access protected endpoint without token"
					}
				},
				{
					"name": "Invalid Category",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Invalid Product",
									"type": "text"
								},
								{
									"key": "price",
									"value": "10.00",
									"type": "text"
								},
								{
									"key": "category",
									"value": "Invalid Category",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								""
							]
						},
						"description": "Try to create product with invalid category"
					}
				},
				{
					"name": "Update Locked Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Should Fail",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/products/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products",
								"1"
							]
						},
						"description": "Try to update a locked product (should fail)"
					}
				}
			],
			"description": "Test error handling and validation"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		}
	]
}
